What is API?
***********
->Application programming interface (API)

->interface between two diffrent softwar

Diffrent type of API diffrent type of architecture rule
1.GrapQL
2.{SOAP}
3.{REST:API}
4.gRPC

What is REST API?
------------------
->it is a set of rules

->important rule is HTTP protocal like get,post,put,patch,delete

Formatting API Request?
-----------------------

client request |  your server | Someone else's server
-----------------------------------------------------
       req/res       req/res         req/res
----<------------>private API<----->Public API<------->



BaseURL/Endpoints-
------------------
https://google.com/entertainment

example:-
GET https://bored-api.appbrewery.com/random

{
    "activity": "Volunteer at your local food pantry",
    "availability": 0.1,
    "type": "charity",
    "participants": 1,
    "price": 0,
    "accessibility": "Few to no challenges",
    "duration": "hours",
    "kidFriendly": true,
    "link": "",
    "key": "1878070"
}

Path Parameter-
--------------

->we pass path param is unique identification perticular data only we will get.

GET https://bored-api.appbrewery.com/random/{path-parameter}
https://bored-api.appbrewery.com/activity/3943506


Query Parameters-
---------------
->we are passing Query param for filter the type=education then it will be showed type=education 
presented data only or multiple query we passed based on that it will geting the details.

GET https://bored-api.appbrewery.com/random? query1=value&query2=value
https://bored-api.appbrewery.com/filter?type=charity&participants= 1


Introduction to JSON:-
*********************

what is json?
------------
->JavaScript Object Notation, is a lightweight, text-based format for storing and exchanging data.
->JSON is based on a subset of the JavaScript Programming Language.

Human-readable: JSON is easy for humans to read and understand. 
Machine-parsable: JSON is easy for computers to understand. 
Language-independent: JSON is independent of any programming language.

->Objects collection of name-value pairs, defined within left ({) and right (}) braces.
->Arrays ordered collection of values, defined within left ([) and right (]) brackets.

JS Object:
const data = {
    activity: "Volunteer at your local food pantry",
    availability: 0.1,
    type: "charity",
    spend time: [
        {
            duration: "hours",
            duration: "minutes"
        }
    ]
    key: "1878071"
}

JSON:
{
    "activity": "Volunteer at your local food pantry",
    "availability": 0.1,
    "type": "charity",
    "spend time": [
        {
            "duration": "hours",
            "duration": "minutes"
        },
        {
            "duration": "hours",
            "duration": "minutes"
        },
    ]
    "key": "1878072"
}

JS Object --> JSON
const jsonData = JSON.stringify(data);
JSON --> JS Object
const data = JSON.parse(jsonData);

refer JSON Folder

Making Server-Side API Request with Axios:-
******************************************

->Making request from your server using Node and Axios.


 your server | Someone else's server
------------------------------------
   req/res            req/res
    <----->Public API<------->

Axios:-
-----
Axios is handling server side request.

->Axios is a third-party library that can be installed via a package manager.
->Axios supports older browsers.
->Axios automatically transforms errors
->Axios automatically parses JSON
->Axios has a built-in mechanism for canceling requests
->Axios has a timeout option
->Axios uses the data property for sending data in a POST request.
->Axios automatically transforms the server's response data.

Random data:-
https://bored-api.appbrewery.com/random

{
    "activity": "Start a collection",
    "availability": 0.5,
    "type": "recreational",
    "participants": 1,
    "price": 0,
    "accessibility": "Few to no challenges",
    "duration": "hours",
    "kidFriendly": true,
    "link": "",
    "key": "1718657"
}

API Authentication:-
*******************
->Authonticating or Authorization yourself with the API provider.

0. No authonication
1. Basic authontication
2. API key authonication
3. Token Based authonication

No authonication
----------------

->Based on ip address how many api request they can make it, we set limites.
->Public API No Authontication

Basic authontication
--------------------

->Is required for some endpoints. use your usename and password for users
->Base64 Encodeing(word->Octes->bits->word) we can pass header

API key Authorization
---------------------
Authorization    |    Authontication

*



->
->
